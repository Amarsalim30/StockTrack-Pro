// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL

enum PermissionType {
  createOrder,
  approveOrder,
  receiveStock,
  adjustStock,
  viewReports,
  processReturns,
  createProduct,
  editProduct,
  deleteProduct,
  // Add additional permissions here...
}

extension PermissionTypeExtension on PermissionType {
  /// Display label for UI or logs
  String get label {
    switch (this) {
      case PermissionType.createOrder:
        return 'Create Order';
      case PermissionType.approveOrder:
        return 'Approve Order';
      case PermissionType.receiveStock:
        return 'Receive Stock';
      case PermissionType.adjustStock:
        return 'Adjust Stock';
      case PermissionType.viewReports:
        return 'View Reports';
      case PermissionType.processReturns:
        return 'Process Returns';
      case PermissionType.createProduct:
        return 'Create Product';
      case PermissionType.editProduct:
        return 'Edit Product';
      case PermissionType.deleteProduct:
        return 'Delete Product';
      // Add more cases if you add permissions
    }
  }

  /// To model
  String get code => name;

  /// Parses enum from string, safely
  static PermissionType? fromCode(String code) {
    return PermissionType.values.firstWhere(
      (e) => e.name == code,
      orElse: () => PermissionType.viewReports,
    );
  }
}
