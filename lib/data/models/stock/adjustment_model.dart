// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';

import '../../../domain/entities/stock/adjustment.dart';

part 'adjustment_model.g.dart';

@JsonSerializable()
class AdjustmentModel extends Equatable {
  final String id;
  final String stockId;
  final int quantityChange;
  final String reason;
  final String performedByUserId;
  final DateTime timestamp;

  const AdjustmentModel({
    required this.id,
    required this.stockId,
    required this.quantityChange,
    required this.reason,
    required this.performedByUserId,
    required this.timestamp,
  });

  factory AdjustmentModel.fromJson(Map<String, dynamic> json) =>
      _$AdjustmentModelFromJson(json);

  Map<String, dynamic> toJson() => _$AdjustmentModelToJson(this);

  Adjustment toDomain() =>
      Adjustment(
        id: id,
        stockId: stockId,
        quantityChange: quantityChange,
        reason: reason,
        performedByUserId: performedByUserId,
        timestamp: timestamp,
      );

  static AdjustmentModel fromDomain(Adjustment ent) =>
      AdjustmentModel(
        id: ent.id,
        stockId: ent.stockId,
        quantityChange: ent.quantityChange,
        reason: ent.reason,
        performedByUserId: ent.performedByUserId,
        timestamp: ent.timestamp,
      );

  AdjustmentModel copyWith({
    String? id,
    String? stockId,
    int? quantityChange,
    String? reason,
    String? performedByUserId,
    DateTime? timestamp,
  }) {
    return AdjustmentModel(
      id: id ?? this.id,
      stockId: stockId ?? this.stockId,
      quantityChange: quantityChange ?? this.quantityChange,
      reason: reason ?? this.reason,
      performedByUserId: performedByUserId ?? this.performedByUserId,
      timestamp: timestamp ?? this.timestamp,
    );
  }

  @override
  List<Object?> get props =>
      [id, stockId, quantityChange, reason, performedByUserId, timestamp];
}
