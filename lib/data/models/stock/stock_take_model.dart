// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:clean_arch_app/domain/entities/stock/stock_take_item.dart';
import 'package:json_annotation/json_annotation.dart';
import '../../../domain/entities/stock/stock_take.dart';

part 'stock_take_model.g.dart';

@JsonSerializable(explicitToJson: true)
class StockTakeModel extends StockTake {
  const StockTakeModel({
    required super.id,
    required super.name,
    super.description,
    required super.startDate,
    super.endDate,
    required super.status,
    required super.createdBy,
    required super.assignedTo,
    super.locationId,
    super.categoryFilters,
    required super.totalItems,
    required super.countedItems,
    required super.discrepancies,
    super.metadata,
    required super.createdAt,
    required super.updatedAt,
  });

  factory StockTakeModel.fromJson(Map<String, dynamic> json) =>
      _$StockTakeModelFromJson(json);

  Map<String, dynamic> toJson() => _$StockTakeModelToJson(this);

  static StockTakeModel fromDomain(StockTake ent) => StockTakeModel(
    id: ent.id,
    name: ent.name,
    description: ent.description,
    startDate: ent.startDate,
    endDate: ent.endDate,
    status: ent.status,
    createdBy: ent.createdBy,
    assignedTo: ent.assignedTo,
    locationId: ent.locationId,
    categoryFilters: ent.categoryFilters,
    totalItems: ent.totalItems,
    countedItems: ent.countedItems,
    discrepancies: ent.discrepancies,
    metadata: ent.metadata,
    createdAt: ent.createdAt,
    updatedAt: ent.updatedAt,
  );
}

@JsonSerializable()
class StockTakeItemModel extends StockTakeItem {
  const StockTakeItemModel({
    required super.id,
    required super.stockTakeId,
    required super.productId,
    required super.productName,
    required super.productCode,
    required super.systemQuantity,
    super.countedQuantity,
    super.countMethod,
    super.countedBy,
    super.countedAt,
    super.notes,
    super.photoUrls,
    required super.isCounted,
    required super.hasDiscrepancy,
    required super.createdAt,
    required super.updatedAt,
  });

  factory StockTakeItemModel.fromJson(Map<String, dynamic> json) =>
      _$StockTakeItemModelFromJson(json);

  Map<String, dynamic> toJson() => _$StockTakeItemModelToJson(this);

  static StockTakeItemModel fromDomain(StockTakeItem ent) => StockTakeItemModel(
    id: ent.id,
    stockTakeId: ent.stockTakeId,
    productId: ent.productId,
    productName: ent.productName,
    productCode: ent.productCode,
    systemQuantity: ent.systemQuantity,
    countedQuantity: ent.countedQuantity,
    countMethod: ent.countMethod,
    countedBy: ent.countedBy,
    countedAt: ent.countedAt,
    notes: ent.notes,
    photoUrls: ent.photoUrls,
    isCounted: ent.isCounted,
    hasDiscrepancy: ent.hasDiscrepancy,
    createdAt: ent.createdAt,
    updatedAt: ent.updatedAt,
  );
}
