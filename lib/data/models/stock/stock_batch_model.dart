// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';
import '../../../domain/entities/stock/stock_batch.dart';

part 'stock_batch_model.g.dart';

@JsonSerializable()
class StockBatchModel extends Equatable {
  final String batchId;
  final String stockId;
  final int quantity;
  final DateTime manufactureDate;
  final DateTime? expiryDate;

  const StockBatchModel({
    required this.batchId,
    required this.stockId,
    required this.quantity,
    required this.manufactureDate,
    this.expiryDate,
  });

  factory StockBatchModel.fromJson(Map<String, dynamic> json) =>
      _$StockBatchModelFromJson(json);

  Map<String, dynamic> toJson() => _$StockBatchModelToJson(this);

  StockBatch toDomain() => StockBatch(
    batchId: batchId,
    stockId: stockId,
    quantity: quantity,
    manufactureDate: manufactureDate,
    expiryDate: expiryDate,
  );

  static StockBatchModel fromDomain(StockBatch ent) => StockBatchModel(
    batchId: ent.batchId,
    stockId: ent.stockId,
    quantity: ent.quantity,
    manufactureDate: ent.manufactureDate,
    expiryDate: ent.expiryDate,
  );

  StockBatchModel copyWith({
    String? batchId,
    String? stockId,
    int? quantity,
    DateTime? manufactureDate,
    DateTime? expiryDate,
  }) {
    return StockBatchModel(
      batchId: batchId ?? this.batchId,
      stockId: stockId ?? this.stockId,
      quantity: quantity ?? this.quantity,
      manufactureDate: manufactureDate ?? this.manufactureDate,
      expiryDate: expiryDate ?? this.expiryDate,
    );
  }

  @override
  List<Object?> get props => [
    batchId,
    stockId,
    quantity,
    manufactureDate,
    expiryDate,
  ];
}
