// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';
import '../../../domain/entities/settings/password_policy.dart';

part 'password_policy_model.g.dart';

@JsonSerializable()
class PasswordPolicyModel extends Equatable {
  final int minLength;
  final bool requireUppercase;
  final bool requireNumbers;
  final bool requireSpecialChars;
  final Duration? expiryDuration; // e.g. 90 days

  const PasswordPolicyModel({
    required this.minLength,
    required this.requireUppercase,
    required this.requireNumbers,
    required this.requireSpecialChars,
    this.expiryDuration,
  });

  factory PasswordPolicyModel.fromJson(Map<String, dynamic> json) =>
      _$PasswordPolicyModelFromJson(json);

  Map<String, dynamic> toJson() => _$PasswordPolicyModelToJson(this);

  PasswordPolicy toDomain() => PasswordPolicy(
    minLength: minLength,
    requireUppercase: requireUppercase,
    requireNumbers: requireNumbers,
    requireSpecialChars: requireSpecialChars,
    expiryDuration: expiryDuration,
  );

  static PasswordPolicyModel fromDomain(PasswordPolicy ent) =>
      PasswordPolicyModel(
        minLength: ent.minLength,
        requireUppercase: ent.requireUppercase,
        requireNumbers: ent.requireNumbers,
        requireSpecialChars: ent.requireSpecialChars,
        expiryDuration: ent.expiryDuration,
      );

  PasswordPolicyModel copyWith({
    int? minLength,
    bool? requireUppercase,
    bool? requireNumbers,
    bool? requireSpecialChars,
    Duration? expiryDuration,
  }) {
    return PasswordPolicyModel(
      minLength: minLength ?? this.minLength,
      requireUppercase: requireUppercase ?? this.requireUppercase,
      requireNumbers: requireNumbers ?? this.requireNumbers,
      requireSpecialChars: requireSpecialChars ?? this.requireSpecialChars,
      expiryDuration: expiryDuration ?? this.expiryDuration,
    );
  }

  @override
  List<Object?> get props => [
    minLength,
    requireUppercase,
    requireNumbers,
    requireSpecialChars,
    expiryDuration,
  ];
}
