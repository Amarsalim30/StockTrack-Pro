// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';
import '../../../domain/entities/settings/reorder_workflow_settings.dart';

part 'reorder_workflow_settings_model.g.dart';

@JsonSerializable()
class ReorderWorkflowSettingsModel extends Equatable {
  final bool autoReorderEnabled;
  final int reorderPointMultiplier; // e.g. days of safety stock
  final int maxPendingOrders; // throttle

  const ReorderWorkflowSettingsModel({
    required this.autoReorderEnabled,
    required this.reorderPointMultiplier,
    required this.maxPendingOrders,
  });

  factory ReorderWorkflowSettingsModel.fromJson(Map<String, dynamic> json) =>
      _$ReorderWorkflowSettingsModelFromJson(json);

  Map<String, dynamic> toJson() => _$ReorderWorkflowSettingsModelToJson(this);

  ReorderWorkflowSettings toDomain() => ReorderWorkflowSettings(
    autoReorderEnabled: autoReorderEnabled,
    reorderPointMultiplier: reorderPointMultiplier,
    maxPendingOrders: maxPendingOrders,
  );

  static ReorderWorkflowSettingsModel fromDomain(ReorderWorkflowSettings ent) =>
      ReorderWorkflowSettingsModel(
        autoReorderEnabled: ent.autoReorderEnabled,
        reorderPointMultiplier: ent.reorderPointMultiplier,
        maxPendingOrders: ent.maxPendingOrders,
      );

  ReorderWorkflowSettingsModel copyWith({
    bool? autoReorderEnabled,
    int? reorderPointMultiplier,
    int? maxPendingOrders,
  }) {
    return ReorderWorkflowSettingsModel(
      autoReorderEnabled: autoReorderEnabled ?? this.autoReorderEnabled,
      reorderPointMultiplier:
          reorderPointMultiplier ?? this.reorderPointMultiplier,
      maxPendingOrders: maxPendingOrders ?? this.maxPendingOrders,
    );
  }

  @override
  List<Object?> get props => [
    autoReorderEnabled,
    reorderPointMultiplier,
    maxPendingOrders,
  ];
}
