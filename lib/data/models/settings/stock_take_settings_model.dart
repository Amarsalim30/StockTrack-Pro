// GENERATED BY AMAR SCRIPT â€“ EDIT MODEL
import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';
import '../../../domain/entities/settings/stock_take_settings.dart';

part 'stock_take_settings_model.g.dart';

@JsonSerializable()
class StockTakeSettingsModel extends Equatable {
  final bool gpsEnforced;
  final double? maxDistanceMeters; // strictness radius
  final List<String>? allowedLocations; // location IDs

  const StockTakeSettingsModel({
    required this.gpsEnforced,
    this.maxDistanceMeters,
    this.allowedLocations,
  });

  factory StockTakeSettingsModel.fromJson(Map<String, dynamic> json) =>
      _$StockTakeSettingsModelFromJson(json);

  Map<String, dynamic> toJson() => _$StockTakeSettingsModelToJson(this);

  StockTakeSettings toDomain() => StockTakeSettings(
    gpsEnforced: gpsEnforced,
    maxDistanceMeters: maxDistanceMeters,
    allowedLocations: allowedLocations,
  );

  static StockTakeSettingsModel fromDomain(StockTakeSettings ent) =>
      StockTakeSettingsModel(
        gpsEnforced: ent.gpsEnforced,
        maxDistanceMeters: ent.maxDistanceMeters,
        allowedLocations: ent.allowedLocations,
      );

  StockTakeSettingsModel copyWith({
    bool? gpsEnforced,
    double? maxDistanceMeters,
    List<String>? allowedLocations,
  }) {
    return StockTakeSettingsModel(
      gpsEnforced: gpsEnforced ?? this.gpsEnforced,
      maxDistanceMeters: maxDistanceMeters ?? this.maxDistanceMeters,
      allowedLocations: allowedLocations ?? this.allowedLocations,
    );
  }

  @override
  List<Object?> get props => [gpsEnforced, maxDistanceMeters, allowedLocations];
}
